generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String    @id @default(cuid())
  company_name String
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  accounts     Account[]
  logs         Log[]
  vehicles     Vehicle[]

  @@map("companies")
}

model Account {
  id          String   @id @default(cuid())
  company_id  String
  username    String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  email       String?  @unique
  password    String?
  role        String
  phoneNumber String?  @unique
  status      Boolean  @default(true)
  company     Company  @relation(fields: [company_id], references: [id])
  logs        Log[]

  @@map("accounts")
}

model Vehicle {
  id            String         @id @default(cuid())
  model         String
  company_id    String
  availability  String         @default("Dispon√≠vel")
  kilometers    Int
  brand         String
  license_plate String
  year          Int
  type_of_fuel  String
  status        Boolean        @default(true)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  logs          Log[]
  company       Company        @relation(fields: [company_id], references: [id])
  fuelExpense   FuelExpenses[]

  @@map("vehicles")
}

model FuelExpenses {
  id              String   @id @default(cuid())
  vehicle_id      String
  date            DateTime @default(now())
  amount          Int
  liters          Int
  price_per_liter Int
  created_at      DateTime @default(now())

  vehicle Vehicle @relation(fields: [vehicle_id], references: [id], onDelete: Cascade)

  @@map("fuel_expenses")
}

model Log {
  id                 String    @id @default(cuid())
  company_id         String
  vehicle_id         String
  account_id         String
  initial_kilometers Int
  progress           String    @default("Em progresso")
  final_kilometers   Int?
  delivered          DateTime?
  notes              String?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  deleted_at         DateTime?
  account            Account   @relation(fields: [account_id], references: [id])
  company            Company   @relation(fields: [company_id], references: [id])
  vehicle            Vehicle   @relation(fields: [vehicle_id], references: [id])

  @@map("logs")
}
